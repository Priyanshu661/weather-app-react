{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Details.jsx","components/App.jsx","index.js"],"names":["Header","year","Date","getFullYear","Footer","Details","props","className","weatherDetails","city","currentTemp","feelsLike","max","min","description","style","color","App","useState","setWeatherDetails","cityName","setCityName","isChecked","setIsChecked","kelvinToCelsius","kelvin","Math","trunc","value","onChange","event","target","type","placeholder","aria-label","aria-describedby","href","onClick","api","fetch","then","res","json","name","main","temp","feels_like","temp_max","temp_min","weather","id","ReactDOM","render","document","getElementById"],"mappings":"iMAQeA,MANf,WACI,OAAO,gCACH,6CCFFC,GAAK,IAAIC,MAAOC,cAWPC,MARf,WACI,OACI,gCACA,6CAAgBH,KCsBTI,MA3Bf,SAAiBC,GAEjB,OAAQ,yBAAKC,UAAU,wBACvB,yBAAKA,UAAU,iBAEb,wBAAIA,UAAU,mBAAmBD,EAAME,eAAeC,MAAU,6BAChE,uBAAGF,UAAU,QAAM,wBAAsB,gCAASD,EAAME,eAAeE,cACvE,0CAAe,gCAASJ,EAAME,eAAeG,YAC7C,mCAAQ,gCAASL,EAAME,eAAeI,KAAc,UAAM,gCAASN,EAAME,eAAeK,MAExF,yBAAKN,UAAU,sCACb,uBAAGA,UAAU,aAAaD,EAAME,eAAeM,aAC/C,uBAAGP,UAAU,qBAAqBQ,MAAO,CAACC,MAAO,cCgHlCC,MAzHnB,WAEI,MAAyCC,mBAAS,CAC9CT,KAAK,GACLC,YAAY,GACZC,UAAU,GACVC,IAAI,GACJC,IAAI,GACJC,YAAY,KACd,mBAPKN,EAAc,KAACW,EAAiB,KASvC,EAA6BD,mBAAS,IAAG,mBAAlCE,EAAQ,KAACC,EAAW,KAE3B,EAA+BH,oBAAS,GAAM,mBAAvCI,EAAS,KAACC,EAAY,KAK7B,SAASC,EAAgBC,GACrB,OAAOC,KAAKC,MAAMF,EAAS,QA6C/B,OACI,6BACA,kBAAC,EAAM,MAMN,6BAASlB,UAAU,UAE1B,yBAAKA,UAAU,wBAEb,yBAAKA,UAAU,8DACb,yBAAKA,UAAU,8BAEb,wBAAIA,UAAU,uBAAqB,8BAEnC,yBAAKA,UAAU,4BACb,2BAAOqB,MAAOR,EAAUS,SAlC9B,SAAsBC,GAClB,IAAOF,EAAOE,EAAMC,OAAbH,MAGPP,EAAYO,IA8BsCI,KAAK,SAASzB,UAAU,uBAAuB0B,YAAY,OAAOC,aAAW,SAC3HC,mBAAiB,iBACnB,uBAAGC,KAAK,KAAKJ,KAAK,UAChB,0BAAMK,QA5Dd,WACEd,GAAa,GAEb,IAAIe,EAAI,qDAAD,OAAsDlB,EAAQ,4CAGnEmB,MAAMD,GACLE,MAAK,SAACC,GAAG,OAAGA,EAAIC,UAChBF,MAAK,SAACE,GAAI,OAAGvB,EAAkB,CAC5BV,KAAKiC,EAAKC,KACVjC,YAAYc,EAAgBkB,EAAKE,KAAKC,MACtClC,UAAUa,EAAgBkB,EAAKE,KAAKE,YACpClC,IAAIY,EAAgBkB,EAAKE,KAAKG,UAC9BlC,IAAIW,EAAgBkB,EAAKE,KAAKI,UAC9BlC,YAAY4B,EAAKO,QAAQ,GAAGnC,iBAIhCO,EAAY,KA0CoBd,UAAU,oCAAoC2C,GAAG,gBAAc,YAoBtG5B,GAAc,kBAAC,EAAO,CAACd,eAAgBA,QAWhC,kBAAC,EAAM,QCtHf2C,IAASC,OAAO,kBAAC,EAAG,MAAGC,SAASC,eAAe,U","file":"static/js/main.7a181f74.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(){\r\n    return <header>\r\n        <h1>Weather App</h1>\r\n         </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst year=new Date().getFullYear();\r\n\r\n\r\nfunction Footer(){\r\n    return(\r\n        <footer>\r\n        <p>Copyright Â© {year}</p>\r\n        </footer>\r\n    ) \r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\n\r\nfunction Details(props){\r\n\r\nreturn (<div className=\"card shadow-0 border\">\r\n<div className=\"card-body p-4\">\r\n\r\n  <h4 className=\"mb-1 sfw-normal\">{props.weatherDetails.city}</h4><br></br>\r\n  <p className=\"mb-2\">Current temperature: <strong>{props.weatherDetails.currentTemp}</strong></p>\r\n  <p>Feels like: <strong>{props.weatherDetails.feelsLike}</strong></p>\r\n  <p>Max: <strong>{props.weatherDetails.max}</strong>, Min: <strong>{props.weatherDetails.min}</strong></p>\r\n\r\n  <div className=\"d-flex flex-row align-items-center\">\r\n    <p className=\"mb-0 me-4\">{props.weatherDetails.description}</p>\r\n    <i className=\"fas fa-cloud fa-3x\" style={{color: \"#eee\"}}></i>\r\n  </div>\r\n\r\n</div>\r\n</div>\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Details","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Details from \"./Details\";\r\n\r\n\r\nfunction App(){\r\n\r\n    const [weatherDetails,setWeatherDetails]=useState({\r\n        city:\"\",\r\n        currentTemp:\"\",\r\n        feelsLike:\"\",\r\n        max:\"\",\r\n        min:\"\",\r\n        description:\"\"\r\n    })\r\n\r\n    const [cityName,setCityName]=useState(\"\");\r\n\r\n    const [isChecked,setIsChecked]=useState(false);\r\n\r\n\r\n\r\n    \r\n    function kelvinToCelsius(kelvin) {\r\n        return Math.trunc(kelvin - 273.15);\r\n    }\r\n    \r\n\r\n    \r\n\r\n    function getLocation(){\r\n      setIsChecked(true)\r\n\r\n      var api=`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=b2f9e4bb27bfc083104bc577befb0993#`\r\n        \r\n\r\n        fetch(api)\r\n        .then((res)=>res.json())\r\n        .then((json)=>setWeatherDetails({\r\n            city:json.name,\r\n            currentTemp:kelvinToCelsius(json.main.temp),\r\n            feelsLike:kelvinToCelsius(json.main.feels_like),\r\n            max:kelvinToCelsius(json.main.temp_max),\r\n            min:kelvinToCelsius(json.main.temp_min),\r\n            description:json.weather[0].description\r\n        }))\r\n\r\n\r\n        setCityName(\"\")\r\n    }\r\n\r\n\r\n\r\n    function handleChange(event){\r\n        const {value}=event.target;\r\n\r\n\r\n        setCityName(value)\r\n\r\n\r\n    }\r\n\r\n   \r\n   \r\n\r\n   \r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n        <Header/>\r\n\r\n\r\n\r\n\r\n\r\n         <section className=\"vh-100\">\r\n\r\n  <div className=\"container py-5 h-100\">\r\n\r\n    <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n      <div className=\"col-md-8 col-lg-6 col-xl-4\">\r\n\r\n        <h3 className=\"mb-4 pb-2 fw-normal\">Check the weather forecast</h3>\r\n\r\n        <div className=\"input-group rounded mb-3\">\r\n          <input value={cityName} onChange={handleChange} type=\"search\" className=\"form-control rounded\" placeholder=\"City\" aria-label=\"Search\"\r\n            aria-describedby=\"search-addon\" />\r\n          <a href=\"#!\" type=\"button\">\r\n            <span onClick={getLocation} className=\"input-group-text border-0 fw-bold\" id=\"search-addon\">\r\n              Check!\r\n            </span>\r\n          </a>\r\n        </div>\r\n\r\n        {/* <div className=\"mb-4 pb-2\">\r\n          <div className=\"form-check form-check-inline\">\r\n            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\"\r\n              value=\"option1\" checked />\r\n            <label className=\"form-check-label\" for=\"inlineRadio1\">Celsius</label>\r\n          </div>\r\n\r\n          <div className=\"form-check form-check-inline\">\r\n            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\"\r\n              value=\"option2\" />\r\n            <label className=\"form-check-label\" for=\"inlineRadio2\">Farenheit</label>\r\n          </div>\r\n        </div> */}\r\n\r\n{isChecked &&  <Details weatherDetails={weatherDetails}/>}\r\n\r\n\r\n       \r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</section>\r\n      \r\n        <Footer/>\r\n\r\n        </div>\r\n    )}\r\n\r\n    export default App;","import React from \"react\";\nimport ReactDOM  from \"react-dom\";\nimport App from \"./components/App\"\n\nReactDOM.render(<App/>,document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}